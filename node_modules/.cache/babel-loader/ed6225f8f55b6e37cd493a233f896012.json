{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport Progress from \"./Progress\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\";\n\nfunction Pomodoro() {\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n  useInterval(() => {\n    if (timeRemaining === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      const duration = mode === 'focus' ? breakDuration : focusDuration;\n      setTimeRemaining(duration * 60);\n      setMode(prevMode => prevMode === 'focus' ? 'break' : 'focus');\n      return;\n    }\n\n    setTimeRemaining(currentTimeRemaining => currentTimeRemaining - 1);\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60);\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Focus, {\n    setFocusDuration: setFocusDuration,\n    setBreakDuration: setBreakDuration,\n    isSessionActive: isSessionActive,\n    minutesToDuration: minutesToDuration,\n    setIsSessionActive: setIsSessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    setFocusDuration: setFocusDuration,\n    setBreakDuration: setBreakDuration,\n    isSessionActive: isSessionActive,\n    minutesToDuration: minutesToDuration,\n    setIsSessionActive: setIsSessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(PlayStop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Progress, {\n    mode: mode,\n    timeRemaining: timeRemaining,\n    isTimerRunning: isTimerRunning,\n    isSessionActive: isSessionActive,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","Progress","Focus","Break","Pomodoro","focusDuration","setFocusDuration","isTimerRunning","setIsTimerRunning","breakDuration","setBreakDuration","timeRemaining","setTimeRemaining","mode","setMode","isSessionActive","setIsSessionActive","Audio","play","duration","prevMode","currentTimeRemaining","playPause","prevState","stopTimer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration} from \"../utils/duration\";\nimport Progress from \"./Progress\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\"\n\nfunction Pomodoro() {\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  useInterval(\n    () => {\n      if (timeRemaining === 0) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          const duration = mode === 'focus' ? breakDuration : focusDuration; \n          setTimeRemaining(duration * 60);\n          setMode((prevMode) => (prevMode==='focus'?'break':'focus'))\n          return;\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60);\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n    const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n      <Focus setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}/>\n      <Break \n      setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}/>\n      </div>\n      <PlayStop />\n      <Progress mode={mode} timeRemaining={timeRemaining} \n        isTimerRunning={isTimerRunning}\n        isSessionActive={isSessionActive}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}