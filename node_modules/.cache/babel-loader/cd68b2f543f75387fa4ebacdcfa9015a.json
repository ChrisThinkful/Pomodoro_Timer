{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport PlayStop from \"./PlayStop\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\";\nimport Progress from './Progress';\n\nfunction Pomodoro() {\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  const decreaseBreak = () => {\n    setBreakDuration(lastBreak => Math.max(1, lastBreak - 1));\n  };\n\n  const increaseBreak = () => {\n    setBreakDuration(lastBreak => Math.min(15, lastBreak + 1));\n  };\n\n  const decreaseFocus = () => {\n    setFocusDuration(lastFocus => Math.max(5, lastFocus - 5));\n  };\n\n  const increaseFocus = () => {\n    setFocusDuration(lastFocus => Math.min(60, lastFocus + 5));\n  };\n\n  useInterval(() => {\n    if (timeRemaining === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      const duration = mode === 'focus' ? breakDuration : focusDuration;\n      setTimeRemaining(duration * 60);\n      setMode(prevMode => prevMode === 'focus' ? 'break' : 'focus');\n      return;\n    }\n\n    setTimeRemaining(currentTimeRemaining => currentTimeRemaining - 1);\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60);\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Focus, {\n    setFocusDuration: setFocusDuration,\n    setBreakDuration: setBreakDuration,\n    isSessionActive: isSessionActive,\n    minutesToDuration: minutesToDuration,\n    setIsSessionActive: setIsSessionActive,\n    focusDuration: focusDuration,\n    increaseFocus: increaseFocus,\n    decreaseFocus: decreaseFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    setFocusDuration: setFocusDuration,\n    setBreakDuration: setBreakDuration,\n    isSessionActive: isSessionActive,\n    minutesToDuration: minutesToDuration,\n    setIsSessionActive: setIsSessionActive,\n    breakDuration: breakDuration,\n    decreaseBreak: decreaseBreak,\n    increaseBreak: increaseBreak,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(PlayStop, {\n    playPause: playPause,\n    stopTimer: stopTimer,\n    isSessionActive: isSessionActive,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Progress, {\n    mode: mode,\n    minutesToDuration: minutesToDuration,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    timeRemaining: timeRemaining,\n    isSessionActive: isSessionActive,\n    isTimerRunning: isTimerRunning,\n    secondsToDuration: secondsToDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","minutesToDuration","secondsToDuration","PlayStop","Focus","Break","Progress","Pomodoro","focusDuration","setFocusDuration","isTimerRunning","setIsTimerRunning","breakDuration","setBreakDuration","timeRemaining","setTimeRemaining","mode","setMode","isSessionActive","setIsSessionActive","decreaseBreak","lastBreak","Math","max","increaseBreak","min","decreaseFocus","lastFocus","increaseFocus","Audio","play","duration","prevMode","currentTimeRemaining","playPause","prevState","stopTimer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport PlayStop from \"./PlayStop\"\nimport Focus from \"./Focus\";\nimport Break from \"./Break\"\nimport Progress from './Progress'\n\nfunction Pomodoro() {\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  const decreaseBreak = () => {\n    setBreakDuration(lastBreak => Math.max(1,lastBreak-1)) \n  }\n  const increaseBreak = () => {\n    setBreakDuration(lastBreak => Math.min(15,lastBreak+1)) \n  }\n  const decreaseFocus = () => {\n    setFocusDuration(lastFocus => Math.max(5,lastFocus-5))\n  }\n  const increaseFocus = () => {\n    setFocusDuration(lastFocus => Math.min(60,lastFocus+5)) \n  }\n\n  useInterval(\n    () => {\n      if (timeRemaining === 0) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          const duration = mode === 'focus' ? breakDuration : focusDuration; \n          setTimeRemaining(duration * 60);\n          setMode((prevMode) => (prevMode==='focus'?'break':'focus'))\n          return;\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60);\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n    const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n      <Focus \n      setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}\n      focusDuration={focusDuration}\n      increaseFocus={increaseFocus}\n      decreaseFocus={decreaseFocus}/>\n      <Break \n      setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}\n      breakDuration={breakDuration}\n      decreaseBreak={decreaseBreak}\n      increaseBreak={increaseBreak}/>\n      </div>\n      <PlayStop \n      playPause={playPause}\n      stopTimer={stopTimer}\n      isSessionActive={isSessionActive}\n      isTimerRunning={isTimerRunning}\n      />\n      <Progress \n      mode={mode}\n      minutesToDuration={minutesToDuration}\n      focusDuration={focusDuration}\n      breakDuration={breakDuration}\n      timeRemaining={timeRemaining}\n      isSessionActive={isSessionActive}\n      isTimerRunning={isTimerRunning}\n      secondsToDuration={secondsToDuration}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}