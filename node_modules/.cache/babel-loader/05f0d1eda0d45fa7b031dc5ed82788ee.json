{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport PlayStop from \"./PlayStop\";\nimport Focus from \"./Focus\";\nimport Break from \"./Break\";\n\nfunction Pomodoro() {\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n  useInterval(() => {\n    if (timeRemaining === 0) {\n      new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      const duration = mode === 'focus' ? breakDuration : focusDuration;\n      setTimeRemaining(duration * 60);\n      setMode(prevMode => prevMode === 'focus' ? 'break' : 'focus');\n      return;\n    }\n\n    setTimeRemaining(currentTimeRemaining => currentTimeRemaining - 1);\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60);\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Focus, {\n    setFocusDuration: setFocusDuration,\n    setBreakDuration: setBreakDuration,\n    isSessionActive: isSessionActive,\n    minutesToDuration: minutesToDuration,\n    setIsSessionActive: setIsSessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    setFocusDuration: setFocusDuration,\n    setBreakDuration: setBreakDuration,\n    isSessionActive: isSessionActive,\n    minutesToDuration: minutesToDuration,\n    setIsSessionActive: setIsSessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(PlayStop, {\n    playPause: playPause,\n    stopTimer: stopTimer,\n    isSessionActive: isSessionActive,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, mode === \"focus\" ? `Focusing for ${minutesToDuration(focusDuration)} minutes` : `On Break for ${minutesToDuration(breakDuration)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, secondsToDuration(timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, !isTimerRunning && isSessionActive ? \"PAUSED\" : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent,\n    style: {\n      width: `${percent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","minutesToDuration","secondsToDuration","PlayStop","Focus","Break","Pomodoro","focusDuration","setFocusDuration","isTimerRunning","setIsTimerRunning","breakDuration","setBreakDuration","timeRemaining","setTimeRemaining","mode","setMode","isSessionActive","setIsSessionActive","Audio","play","duration","prevMode","currentTimeRemaining","playPause","prevState","stopTimer","height","percent","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration} from \"../utils/duration\";\nimport PlayStop from \"./PlayStop\"\nimport Focus from \"./Focus\";\nimport Break from \"./Break\"\n\nfunction Pomodoro() {\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  useInterval(\n    () => {\n      if (timeRemaining === 0) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          const duration = mode === 'focus' ? breakDuration : focusDuration; \n          setTimeRemaining(duration * 60);\n          setMode((prevMode) => (prevMode==='focus'?'break':'focus'))\n          return;\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60);\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n    const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n      <Focus \n      setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}/>\n      <Break \n      setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}/>\n      </div>\n      <PlayStop \n      playPause={playPause}\n      stopTimer={stopTimer}\n      isSessionActive={isSessionActive}\n      isTimerRunning={isTimerRunning}\n      />\n      \n      <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n          <h2 data-testid=\"session-title\">\n            {mode === \"focus\"\n              ? `Focusing for ${minutesToDuration(focusDuration)} minutes`\n              : `On Break for ${minutesToDuration(breakDuration)} minutes`}\n          </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(timeRemaining)} remaining\n            </p>\n            <h3>{!isTimerRunning && isSessionActive ? \"PAUSED\" : null}</h3>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n          <div className=\"progress\" style={{ height: \"20px\" }}>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              aria-valuenow={percent}\n              style={{width: `${percent}%`}}\n            />\n          </div>\n          </div>\n        </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}