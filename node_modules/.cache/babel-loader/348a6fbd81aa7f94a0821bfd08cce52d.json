{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Progress.js\";\nimport React from 'react';\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Progress({\n  mode,\n  // minutesToDuration,\n  focusDuration,\n  breakDuration,\n  timeRemaining,\n  isSessionActive,\n  isTimerRunning,\n  secondsToDuration\n}) {\n  let currentDuration = mode === 'focus' ? focusDuration : breakDuration;\n  let percent = (1 - timeRemaining / (currentDuration * 60)) * 100;\n\n  if (!isSessionActive) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, mode === \"focus\" ? `Focusing for ${minutesToDuration(focusDuration)} minutes` : `On Break for ${minutesToDuration(breakDuration)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, secondsToDuration(timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, !isTimerRunning && isSessionActive ? \"PAUSED\" : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent,\n    style: {\n      width: `${percent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default Progress;","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Progress.js"],"names":["React","minutesToDuration","Progress","mode","focusDuration","breakDuration","timeRemaining","isSessionActive","isTimerRunning","secondsToDuration","currentDuration","percent","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,IADc;AAEd;AACAC,EAAAA,aAHc;AAIdC,EAAAA,aAJc;AAKdC,EAAAA,aALc;AAMdC,EAAAA,eANc;AAOdC,EAAAA,cAPc;AAQdC,EAAAA;AARc,CAAlB,EASG;AACC,MAAIC,eAAe,GAAGP,IAAI,KAAK,OAAT,GAAkBC,aAAlB,GAAiCC,aAAvD;AACA,MAAIM,OAAO,GAAG,CAAC,IAAIL,aAAa,IAAII,eAAe,GAAC,EAApB,CAAlB,IAA6C,GAA3D;;AACA,MAAG,CAACH,eAAJ,EAAqB;AACjB,WAAO,IAAP;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,KAAK,OAAT,GACI,gBAAeF,iBAAiB,CAACG,aAAD,CAAgB,UADpD,GAEI,gBAAeH,iBAAiB,CAACI,aAAD,CAAgB,UAHvD,CADA,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,iBAAiB,CAACH,aAAD,CADpB,eANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,CAACE,cAAD,IAAmBD,eAAnB,GAAqC,QAArC,GAAgD,IAArD,CATF,CADF,CADA,eAcA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeD,OALjB;AAME,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAG,GAAEF,OAAQ;AAAnB,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAdA,CADJ;AA+BH;;AAED,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport { minutesToDuration } from \"../utils/duration\"\n\nfunction Progress({\n    mode,\n    // minutesToDuration,\n    focusDuration,\n    breakDuration,\n    timeRemaining,\n    isSessionActive,\n    isTimerRunning,\n    secondsToDuration\n}) {\n    let currentDuration = mode === 'focus'? focusDuration: breakDuration;\n    let percent = (1 - timeRemaining / (currentDuration*60)) * 100;\n    if(!isSessionActive) {\n        return null\n    }\n\n    return (\n        <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n          <h2 data-testid=\"session-title\">\n            {mode === \"focus\"\n              ? `Focusing for ${minutesToDuration(focusDuration)} minutes`\n              : `On Break for ${minutesToDuration(breakDuration)} minutes`}\n          </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(timeRemaining)} remaining\n            </p>\n            <h3>{!isTimerRunning && isSessionActive ? \"PAUSED\" : null}</h3>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={percent}\n                style={{width: `${percent}%`}}\n              />\n            </div>\n          </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Progress;"]},"metadata":{},"sourceType":"module"}