{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js\";\nimport React from 'react';\n\nfunction ProgressBar() {\n  let currentDuration = mode === 'focus' ? focusDuration : restDuration;\n  let percent = (1 - timeRemaining / (currentDuration * 60)) * 100;\n  console.log(percent);\n\n  if (!isSessionActive) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent,\n    style: {\n      width: `${percent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/chris/Desktop/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","currentDuration","mode","focusDuration","restDuration","percent","timeRemaining","console","log","isSessionActive","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,GAAuB;AACnB,MAAIC,eAAe,GAAGC,IAAI,KAAK,OAAT,GAAkBC,aAAlB,GAAiCC,YAAvD;AACA,MAAIC,OAAO,GAAG,CAAC,IAAIC,aAAa,IAAIL,eAAe,GAAC,EAApB,CAAlB,IAA6C,GAA3D;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,MAAG,CAACI,eAAJ,EAAqB;AACjB,WAAO,IAAP;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeL,OALjB;AAME,IAAA,KAAK,EAAE;AAACM,MAAAA,KAAK,EAAG,GAAEN,OAAQ;AAAnB,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAYH","sourcesContent":["import React from 'react';\n\nfunction ProgressBar() {\n    let currentDuration = mode === 'focus'? focusDuration: restDuration;\n    let percent = (1 - timeRemaining / (currentDuration*60)) * 100\n    console.log(percent)\n    if(!isSessionActive) {\n        return null\n    }\n    return (\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n        <div\n          className=\"progress-bar\"\n          role=\"progressbar\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          aria-valuenow={percent}\n          style={{width: `${percent}%`}}\n        />\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}