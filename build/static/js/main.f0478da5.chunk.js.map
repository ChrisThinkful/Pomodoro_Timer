{"version":3,"sources":["utils/duration/index.js","pomodoro/PlayStop.js","utils/class-names/index.js","pomodoro/Focus.js","pomodoro/Break.js","pomodoro/Progress.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","PlayStop","classNameToBoolean","playPause","stopTimer","isTimerRunning","isSessionActive","className","role","aria-label","type","data-testid","title","onClick","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","disabled","Focus","focusDuration","decreaseFocus","increaseFocus","Break","breakDuration","decreaseBreak","increaseBreak","Progress","mode","timeRemaining","percent","style","height","aria-valuemin","aria-valuemax","aria-valuenow","width","Pomodoro","useState","setFocusDuration","setIsTimerRunning","setBreakDuration","setTimeRemaining","setMode","setIsSessionActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","prevMode","currentTimeRemaining","lastFocus","min","max","lastBreak","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0478da5.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from 'react'\nimport classNames from \"../utils/class-names\";\n\nfunction PlayStop({\n    playPause,\n    stopTimer,\n    isTimerRunning,\n    isSessionActive\n}) {\n    return (\n        <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={stopTimer}\n              disabled={!isSessionActive}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n\n}\n\nexport default PlayStop","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\"\nimport { minutesToDuration } from \"../utils/duration\"\n\nfunction Focus({\n    isSessionActive,\n    isTimerRunning,\n    focusDuration,\n    decreaseFocus,\n    increaseFocus,\n}) {\n    // const [focusDuration, setFocusDuration] = useState(25);\n    // const decreaseFocus = () => {\n    //     setFocusDuration(lastFocus => Math.max(5,lastFocus-5))\n    // }\n    // const increaseFocus = () => {\n    //     setFocusDuration(lastFocus => Math.min(60,lastFocus+5)) \n    // }\n\n    return (\n        <div className=\"col\">\n        <div className=\"input-group input-group-lg mb-2\">\n          <span className=\"input-group-text\" data-testid=\"duration-focus\">\n          Focus Duration: {minutesToDuration(focusDuration)}\n          </span>\n          <div className=\"input-group-append\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"decrease-focus\"\n              onClick={decreaseFocus}\n              disabled={isSessionActive || isTimerRunning? true: false}\n            >\n              <span className=\"oi oi-minus\" />\n            </button>\n             <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"increase-focus\"\n              onClick={increaseFocus}\n              disabled={isSessionActive || isTimerRunning? true: false}\n            >\n              <span className=\"oi oi-plus\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Focus;","import React from \"react\";\nimport {minutesToDuration} from \"../utils/duration\"\n\nfunction Break({\n    isSessionActive,\n    isTimerRunning,\n    breakDuration,\n    decreaseBreak,\n    increaseBreak\n}) {\n    // const [breakDuration, setBreakDuration] = useState(5);\n    // const decreaseBreak = () => {\n    //     setBreakDuration(lastBreak => Math.max(1,lastBreak-1)) \n    // }\n    // const increaseBreak = () => {\n    //     setBreakDuration(lastBreak => Math.min(15,lastBreak+1)) \n    // }\n    return (\n        <div className=\"col\">\n        <div className=\"float-right\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-break\">\n              Break Duration: {minutesToDuration(breakDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-break\"\n                onClick={decreaseBreak}\n                disabled={isSessionActive || isTimerRunning? true: false}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-break\"\n                onClick={increaseBreak}\n                disabled={isSessionActive || isTimerRunning? true: false}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default Break;","import React from 'react';\nimport { minutesToDuration } from \"../utils/duration\"\n\nfunction Progress({\n    mode,\n    // minutesToDuration,\n    focusDuration,\n    breakDuration,\n    timeRemaining,\n    isSessionActive,\n    isTimerRunning,\n    secondsToDuration\n}) {\n    let currentDuration = mode === 'focus'? focusDuration: breakDuration;\n    let percent = (1 - timeRemaining / (currentDuration*60)) * 100;\n    if(!isSessionActive) {\n        return null\n    }\n\n    return (\n        <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n          <h2 data-testid=\"session-title\">\n            {mode === \"focus\"\n              ? `Focusing for ${minutesToDuration(focusDuration)} minutes`\n              : `On Break for ${minutesToDuration(breakDuration)} minutes`}\n          </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(timeRemaining)} remaining\n            </p>\n            <h3>{!isTimerRunning && isSessionActive ? \"PAUSED\" : null}</h3>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={percent}\n                style={{width: `${percent}%`}}\n              />\n            </div>\n          </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Progress;","import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport PlayStop from \"./PlayStop\"\nimport Focus from \"./Focus\";\nimport Break from \"./Break\"\nimport Progress from './Progress'\n\nfunction Pomodoro() {\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  const decreaseBreak = () => {\n    setBreakDuration(lastBreak => Math.max(1,lastBreak-1)) \n  }\n  const increaseBreak = () => {\n    setBreakDuration(lastBreak => Math.min(15,lastBreak+1)) \n  }\n  const decreaseFocus = () => {\n    setFocusDuration(lastFocus => Math.max(5,lastFocus-5))\n  }\n  const increaseFocus = () => {\n    setFocusDuration(lastFocus => Math.min(60,lastFocus+5)) \n  }\n\n  useInterval(\n    () => {\n      if (timeRemaining === 0) {\n          new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n          const duration = mode === 'focus' ? breakDuration : focusDuration; \n          setTimeRemaining(duration * 60);\n          setMode((prevMode) => (prevMode==='focus'?'break':'focus'))\n          return;\n      }\n      setTimeRemaining((currentTimeRemaining) => currentTimeRemaining - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimeRemaining(focusDuration * 60);\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n    const stopTimer = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n      <Focus \n      setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}\n      focusDuration={focusDuration}\n      increaseFocus={increaseFocus}\n      decreaseFocus={decreaseFocus}/>\n      <Break \n      setFocusDuration={setFocusDuration} \n      setBreakDuration={setBreakDuration}\n      isSessionActive={isSessionActive}\n      minutesToDuration={minutesToDuration}\n      setIsSessionActive={setIsSessionActive}\n      breakDuration={breakDuration}\n      decreaseBreak={decreaseBreak}\n      increaseBreak={increaseBreak}/>\n      </div>\n      <PlayStop \n      playPause={playPause}\n      stopTimer={stopTimer}\n      isSessionActive={isSessionActive}\n      isTimerRunning={isTimerRunning}\n      />\n      <Progress \n      mode={mode}\n      minutesToDuration={minutesToDuration}\n      focusDuration={focusDuration}\n      breakDuration={breakDuration}\n      timeRemaining={timeRemaining}\n      isSessionActive={isSessionActive}\n      isTimerRunning={isTimerRunning}\n      secondsToDuration={secondsToDuration}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}